name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install backend dependencies
      working-directory: server
      run: npm install --save-dev mocha
    
    - name: Verify Mocha Installation
      working-directory: server
      run: ls -la node_modules/.bin

    - name: Fix Mocha Permissions
      working-directory: server
      run: chmod +x node_modules/.bin/mocha 

    - name: Run backend tests
      working-directory: server
      run: npx mocha tests/**/*.test.js --exit
      env:
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-secret-key' }}
        EMAIL_HOST: ${{ secrets.EMAIL_HOST || 'smtp.example.com' }}
        EMAIL_PORT: ${{ secrets.EMAIL_PORT || '587' }}
        EMAIL_SECURE: ${{ secrets.EMAIL_SECURE || 'false' }}
        EMAIL_USER: ${{ secrets.EMAIL_USER || 'test@example.com' }}
        EMAIL_PASS: ${{ secrets.EMAIL_PASS || 'test-password' }}
        DB_PATH: ':memory:'

    - name: Login to Docker Hub
      if: success()
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      if: success()
      run: docker build --no-cache -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/notasavisos:latest .

    - name: Push image to Docker Hub
      if: success()
      run: docker push ${{ secrets.DOCKER_USERNAME }}/notasavisos:latest

